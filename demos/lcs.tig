/* longest common substring */
let
    var a : string := gets()
    var b : string := gets()
    function max (a : int, b : int) : int = if a > b then a else b
    function strAt (s : string, i : int) : int = ord(substring(s, i, 1))
    var la := size(a)
    var lb := size(b)
    type vector = array of int
    type matrix = array of vector
    function initMatrix(mat : matrix, row : int, col : int) =
        for i := 0 to row-1 do
            mat[i] := vector[col] of 0
    var dp : matrix := matrix[la+1] of nil
in
    initMatrix(dp, la+1, lb+1);
    for i := 0 to la-1 do
        dp[i][0] := 0;
    for i := 0 to lb-1 do
        dp[0][i] := 0;
    for i := 1 to la do
        for j := 1 to lb do
            if strAt(a,i-1) = strAt(b,j-1) then
                dp[i][j] := dp[i-1][j-1] + 1
            else dp[i][j] := max(dp[i-1][j], dp[i][j-1]);
    puti(dp[la][lb])
end